clc; clear; close all;

%% ---------------- Parametri lemniscata ----------------
alpha = 2;                 % ≈ frequenza naturale desiderata
r     = 1;                 % raggio della lemniscata
omega = alpha + 1;         
T     = 4*pi/omega;        % periodo
t     = linspace(0,T,500);
dt    = t(2)-t(1);

x_d =  r*cos(omega*t) ./ (1+sin(omega*t).^2);
y_d =  r*cos(omega*t).*sin(omega*t) ./ (1+sin(omega*t).^2);

dx_d   = gradient(x_d,dt);
dy_d   = gradient(y_d,dt);
theta_d = atan2(dy_d,dx_d);

v_d     = sqrt(dx_d.^2 + dy_d.^2);
omega_d = [diff(theta_d),0]/dt;

%% ------------- Condizione iniziale casuale -------------
theta_rand = 2*pi*rand();
r_rand     = 0.5*rand();        % entro 0.5 m
x0 = x_d(1) + r_rand*cos(theta_rand);
y0 = y_d(1) + r_rand*sin(theta_rand);
th0 = theta_d(1);

%% ------------- Allocazione variabili -------------------
N      = numel(t);
x      = zeros(1,N); y = x; th = x;
v_cmd  = x;          om_cmd = x;

x(1)=x0; y(1)=y0; th(1)=th0;

%% ------------- Guadagni (positivi e costanti) ----------
k1 = 2;   % k1(vd,wd) > 0
k2 = 2;   % k2  > 0
k3 = 2;   % k3(vd,wd) > 0

%% ------------- Simulazione -----------------------------
for i = 1:N-1
    
    % ---------- errori nel frame del robot --------------
    R = [cos(th(i))  sin(th(i));
         -sin(th(i)) cos(th(i))];
    e   = R*([x_d(i);y_d(i)]-[x(i);y(i)]);
    e1  = e(1); 
    e2  = e(2); 
    e3  = wrapToPi(theta_d(i)-th(i));

    % ---------- fattore sinc(e3)=sin(e3)/e3 -------------
    if abs(e3) < 1e-3
        sinc_e3 = 1;            % limite per e3→0
    else
        sinc_e3 = sin(e3)/e3;
    end
    
    % ---------- leggi di controllo almost‑non‑linear ----
    v_cmd(i)  =v_d(i)*cos(e3) + k1*e1;
    om_cmd(i) = omega_d(i) + k2*v_d(i)*e2*sinc_e3 + k3*e3;

    % ---------- integrazione uniciclo -------------------
    x(i+1)  = x(i) + dt*v_cmd(i)*cos(th(i));
    y(i+1)  = y(i) + dt*v_cmd(i)*sin(th(i));
    th(i+1) = th(i)+ dt*om_cmd(i);
end
v_cmd(end)=v_cmd(end-1);  om_cmd(end)=om_cmd(end-1);


%% ----------------- Plot principali ---------------------
figure; plot(x_d,y_d,'k--','LineWidth',1.8); hold on
plot(x,y,'r','LineWidth',1.8);
scatter(x(1),y(1),80,'g','filled');
legend('Lemniscata desiderata','Traiettoria seguita','Start');
axis equal; grid on; xlabel('x'); ylabel('y');
title('Tracking con controllo “Almost‑Non‑Linear”');

figure;
subplot(2,1,1); plot(t,v_cmd,'LineWidth',1.5); grid on
ylabel('v  [m/s]'); title('Comando lineare v(t)');
subplot(2,1,2); plot(t,om_cmd,'LineWidth',1.5); grid on
ylabel('\omega [rad/s]'); xlabel('Tempo [s]');
title('Comando angolare \omega(t)');

err = hypot(x-x_d, y-y_d);
figure; plot(t,err,'LineWidth',1.5); grid on
xlabel('Tempo [s]'); ylabel('Errore [m]');
title('Errore euclideo di tracking');


%% ----------------- Variabili di stato ---------------------
figure('Name','Variabili di stato vs desiderate','NumberTitle','off');
subplot(3,1,1); plot(t, x, 'r', t, x_d, 'k--', 'LineWidth', 1.5); grid on;
ylabel('x [m]'); legend('x(t)', 'x_d(t)');
title('Evoluzione di x(t)');

subplot(3,1,2); plot(t, y, 'r', t, y_d, 'k--', 'LineWidth', 1.5); grid on;
ylabel('y [m]'); legend('y(t)', 'y_d(t)');
title('Evoluzione di y(t)');

subplot(3,1,3); plot(t, th, 'r', t, theta_d, 'k--', 'LineWidth', 1.5); grid on;
ylabel('\theta [rad]'); xlabel('Tempo [s]');
legend('\theta(t)', '\theta_d(t)');
title('Evoluzione di \theta(t)');

%% ----------------- Errori sulle variabili di stato ---------------------
figure('Name','Errori sulle variabili di stato','NumberTitle','off');
subplot(3,1,1); plot(t, x - x_d, 'LineWidth', 1.5); grid on;
ylabel('x - x_d [m]'); title('Errore su x(t)');

subplot(3,1,2); plot(t, y - y_d, 'LineWidth', 1.5); grid on;
ylabel('y - y_d [m]'); title('Errore su y(t)');

subplot(3,1,3); plot(t, wrapToPi(th - theta_d), 'LineWidth', 1.5); grid on;
ylabel('\theta - \theta_d [rad]'); xlabel('Tempo [s]');
title('Errore su \theta(t)');
